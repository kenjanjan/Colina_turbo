name: Deploy to EC2 Instances

on:
  push:
    branches:
      - main # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Build Docker image for the backend (NestJS)
      - name: Build backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-backend ./apps/nestjs

      # Add SSH key from PEM file
      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > /tmp/ec2-key.pem
          chmod 600 /tmp/ec2-key.pem
        shell: bash

      # Deploy NestJS to Backend EC2 instance
      - name: Deploy NestJS to EC2 Backend
        run: |
          ssh -i /tmp/ec2-key.pem -o StrictHostKeyChecking=no -v ubuntu@${{ secrets.EC2_BACKEND_IP }} << 'EOF'
            # Stop the current Docker container if running
            sudo docker stop nestjs-backend || true
            sudo docker rm nestjs-backend || true

            # Pull the latest image from Docker Hub
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-backend:latest

            # Run the new container
            sudo docker run -d -p 3000:3000 --name nestjs-backend ${{ secrets.DOCKERHUB_USERNAME }}/nestjs-backend:latest
          EOF

      # Build Docker image for the frontend (Next.js)
      - name: Build frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend ./apps/nextjs

      # Deploy Next.js to Frontend EC2 instance
      - name: Deploy Next.js to EC2 Frontend
        run: |
          ssh -i /tmp/ec2-key.pem -o StrictHostKeyChecking=no -v  ubuntu@${{ secrets.EC2_FRONTEND_IP }} << 'EOF'
            # Stop the current Docker container if running
            docker stop nextjs-frontend || true
            docker rm nextjs-frontend || true

            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:latest

            # Run the new container
            sudo docker run -d -p 80:3000 --name nextjs-frontend ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:latest
          EOF